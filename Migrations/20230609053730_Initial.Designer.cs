// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniChatApplication.Data;

namespace UniChatApplication.Migrations
{
    [DbContext(typeof(UniChatDbContext))]
    [Migration("20230609053730_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("UniChatApplication.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("RoleID")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("account");
                });

            modelBuilder.Entity("UniChatApplication.Models.AdminProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountID")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("Gender")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("admin_profile");
                });

            modelBuilder.Entity("UniChatApplication.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("class");
                });

            modelBuilder.Entity("UniChatApplication.Models.Contact", b =>
                {
                    b.Property<int>("contactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("contactCustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("contactCustomerPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("contactMes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("contactProgress")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("contactTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("contactId");

                    b.ToTable("contact");
                });

            modelBuilder.Entity("UniChatApplication.Models.GroupChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("_index");

                    b.Property<int>("RoomID")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.HasKey("Id");

                    b.HasIndex("RoomID");

                    b.ToTable("group_chat");
                });

            modelBuilder.Entity("UniChatApplication.Models.GroupDeadLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("datetime")
                        .HasColumnName("expiration_time");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("group_dealine");
                });

            modelBuilder.Entity("UniChatApplication.Models.GroupManage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<bool>("Role")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("role");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("group_manage");
                });

            modelBuilder.Entity("UniChatApplication.Models.GroupMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("Content")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<DateTime>("TimeMessage")
                        .HasColumnType("datetime")
                        .HasColumnName("time_message");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("GroupId");

                    b.ToTable("group_message");
                });

            modelBuilder.Entity("UniChatApplication.Models.GroupPinMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GroupMessageId")
                        .HasColumnType("int")
                        .HasColumnName("group_message_id");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime")
                        .HasColumnName("time_marked");

                    b.HasKey("Id");

                    b.HasIndex("GroupMessageId");

                    b.ToTable("group_marked_message");
                });

            modelBuilder.Entity("UniChatApplication.Models.LoginCookie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountID")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("datetime")
                        .HasColumnName("expiration_time");

                    b.Property<string>("Key")
                        .HasColumnType("text")
                        .HasColumnName("login_key");

                    b.HasKey("Id");

                    b.ToTable("login_cookie");
                });

            modelBuilder.Entity("UniChatApplication.Models.RoomChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_id");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("room_chat");
                });

            modelBuilder.Entity("UniChatApplication.Models.RoomDeadLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("datetime")
                        .HasColumnName("expiration_time");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("room_dealine");
                });

            modelBuilder.Entity("UniChatApplication.Models.RoomMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountID")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int?>("RoomID")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<DateTime>("TimeMessage")
                        .HasColumnType("datetime")
                        .HasColumnName("time_message");

                    b.HasKey("Id");

                    b.HasIndex("AccountID");

                    b.HasIndex("RoomID");

                    b.ToTable("room_message");
                });

            modelBuilder.Entity("UniChatApplication.Models.RoomMessagePin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RoomMessageId")
                        .HasColumnType("int")
                        .HasColumnName("room_message_id");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime")
                        .HasColumnName("time_marked");

                    b.HasKey("Id");

                    b.HasIndex("RoomMessageId");

                    b.ToTable("room_marked_message");
                });

            modelBuilder.Entity("UniChatApplication.Models.StudentProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountID")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<int?>("ClassID")
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("Gender")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Major")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("StudentCode")
                        .HasColumnType("text")
                        .HasColumnName("student_code");

                    b.HasKey("Id");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.HasIndex("ClassID");

                    b.ToTable("student_profile");
                });

            modelBuilder.Entity("UniChatApplication.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.HasKey("Id");

                    b.ToTable("subject");
                });

            modelBuilder.Entity("UniChatApplication.Models.TeacherProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountID")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("Gender")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("TeacherCode")
                        .HasColumnType("text")
                        .HasColumnName("teacher_code");

                    b.HasKey("Id");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("teacher_profile");
                });

            modelBuilder.Entity("UniChatApplication.Models.AdminProfile", b =>
                {
                    b.HasOne("UniChatApplication.Models.Account", "Account")
                        .WithOne("AdminProfile")
                        .HasForeignKey("UniChatApplication.Models.AdminProfile", "AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("UniChatApplication.Models.GroupChat", b =>
                {
                    b.HasOne("UniChatApplication.Models.RoomChat", "RoomChat")
                        .WithMany("GroupChats")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomChat");
                });

            modelBuilder.Entity("UniChatApplication.Models.GroupDeadLine", b =>
                {
                    b.HasOne("UniChatApplication.Models.GroupChat", "GroupChat")
                        .WithMany("DeadLines")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupChat");
                });

            modelBuilder.Entity("UniChatApplication.Models.GroupManage", b =>
                {
                    b.HasOne("UniChatApplication.Models.GroupChat", "GroupChat")
                        .WithMany("GroupManages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniChatApplication.Models.StudentProfile", "StudentProfile")
                        .WithMany("GroupManages")
                        .HasForeignKey("StudentId");

                    b.Navigation("GroupChat");

                    b.Navigation("StudentProfile");
                });

            modelBuilder.Entity("UniChatApplication.Models.GroupMessage", b =>
                {
                    b.HasOne("UniChatApplication.Models.Account", "Account")
                        .WithMany("GroupMessages")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniChatApplication.Models.GroupChat", "GroupChat")
                        .WithMany("Messages")
                        .HasForeignKey("GroupId");

                    b.Navigation("Account");

                    b.Navigation("GroupChat");
                });

            modelBuilder.Entity("UniChatApplication.Models.GroupPinMessage", b =>
                {
                    b.HasOne("UniChatApplication.Models.GroupMessage", "GroupMessage")
                        .WithMany("AllPinMessage")
                        .HasForeignKey("GroupMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupMessage");
                });

            modelBuilder.Entity("UniChatApplication.Models.RoomChat", b =>
                {
                    b.HasOne("UniChatApplication.Models.Class", "Class")
                        .WithMany("RoomChats")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniChatApplication.Models.Subject", "Subject")
                        .WithMany("RoomChats")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniChatApplication.Models.TeacherProfile", "TeacherProfile")
                        .WithMany("RoomChats")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Subject");

                    b.Navigation("TeacherProfile");
                });

            modelBuilder.Entity("UniChatApplication.Models.RoomDeadLine", b =>
                {
                    b.HasOne("UniChatApplication.Models.RoomChat", "RoomChat")
                        .WithMany("DeadLines")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomChat");
                });

            modelBuilder.Entity("UniChatApplication.Models.RoomMessage", b =>
                {
                    b.HasOne("UniChatApplication.Models.Account", "Account")
                        .WithMany("RoomMessages")
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniChatApplication.Models.RoomChat", "RoomChat")
                        .WithMany("RoomMessages")
                        .HasForeignKey("RoomID");

                    b.Navigation("Account");

                    b.Navigation("RoomChat");
                });

            modelBuilder.Entity("UniChatApplication.Models.RoomMessagePin", b =>
                {
                    b.HasOne("UniChatApplication.Models.RoomMessage", "RoomMessage")
                        .WithMany()
                        .HasForeignKey("RoomMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomMessage");
                });

            modelBuilder.Entity("UniChatApplication.Models.StudentProfile", b =>
                {
                    b.HasOne("UniChatApplication.Models.Account", "Account")
                        .WithOne("StudentProfile")
                        .HasForeignKey("UniChatApplication.Models.StudentProfile", "AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniChatApplication.Models.Class", "Class")
                        .WithMany("StudentProfiles")
                        .HasForeignKey("ClassID");

                    b.Navigation("Account");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("UniChatApplication.Models.TeacherProfile", b =>
                {
                    b.HasOne("UniChatApplication.Models.Account", "Account")
                        .WithOne("TeacherProfile")
                        .HasForeignKey("UniChatApplication.Models.TeacherProfile", "AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("UniChatApplication.Models.Account", b =>
                {
                    b.Navigation("AdminProfile");

                    b.Navigation("GroupMessages");

                    b.Navigation("RoomMessages");

                    b.Navigation("StudentProfile");

                    b.Navigation("TeacherProfile");
                });

            modelBuilder.Entity("UniChatApplication.Models.Class", b =>
                {
                    b.Navigation("RoomChats");

                    b.Navigation("StudentProfiles");
                });

            modelBuilder.Entity("UniChatApplication.Models.GroupChat", b =>
                {
                    b.Navigation("DeadLines");

                    b.Navigation("GroupManages");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("UniChatApplication.Models.GroupMessage", b =>
                {
                    b.Navigation("AllPinMessage");
                });

            modelBuilder.Entity("UniChatApplication.Models.RoomChat", b =>
                {
                    b.Navigation("DeadLines");

                    b.Navigation("GroupChats");

                    b.Navigation("RoomMessages");
                });

            modelBuilder.Entity("UniChatApplication.Models.StudentProfile", b =>
                {
                    b.Navigation("GroupManages");
                });

            modelBuilder.Entity("UniChatApplication.Models.Subject", b =>
                {
                    b.Navigation("RoomChats");
                });

            modelBuilder.Entity("UniChatApplication.Models.TeacherProfile", b =>
                {
                    b.Navigation("RoomChats");
                });
#pragma warning restore 612, 618
        }
    }
}
